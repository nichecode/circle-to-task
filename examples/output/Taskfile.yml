version: "3"
tasks:
    build:
        desc: 'Task converted from CircleCI job: build'
        cmds:
            - git checkout HEAD
            - npm run build
            - docker build -t myapp:latest .
            - mkdir -p ./workspace && cp -r [dist/* Dockerfile] ./workspace/
            - mkdir -p ./artifacts && cp -r dist ./artifacts/
        deps:
            - npm-install
    ci-local:
        desc: Run full CI pipeline locally (where possible)
        cmds:
            - echo 'Running local CI simulation...'
            - 'echo ''Note: This runs the build logic, but skips server-only features'''
        deps:
            - setup-local
    clean:
        desc: Clean local build artifacts
        cmds:
            - rm -rf ./workspace ./artifacts ./test-results
            - echo 'Cleaned local CircleCI simulation directories'
    deploy:
        desc: 'Task converted from CircleCI job: deploy'
        cmds:
            - git checkout HEAD
            - echo 'Using local workspace if available'
            - npm run deploy:staging
        deps:
            - npm-install
    lint:
        desc: 'Task converted from CircleCI job: lint'
        cmds:
            - git checkout HEAD
            - npm run lint
            - npm run format:check
        deps:
            - npm-install
    npm-install:
        desc: Common task - used in 5 jobs
        cmds:
            - npm install
    setup:
        desc: 'Task converted from CircleCI job: setup'
        cmds:
            - git checkout HEAD
            - npm ci --cache .npm --prefer-offline
        deps:
            - npm-install
    setup-local:
        desc: Setup local environment for CircleCI simulation
        cmds:
            - mkdir -p ./workspace ./artifacts ./test-results
            - echo 'Local CircleCI directories created'
            - 'echo ''Note: Some steps are CircleCI-server only and will be skipped'''
    test:
        desc: 'Task converted from CircleCI job: test'
        cmds:
            - git checkout HEAD
            - npm test
            - npm run test:coverage
            - mkdir -p ./test-results && cp -r test-results ./test-results/
            - mkdir -p ./artifacts && cp -r coverage ./artifacts/
        deps:
            - npm-install
